






apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/component: admission-control
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 3.71.0
    helm.sh/chart: sensor-71.0.0
    app: admission-control
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 3
  minReadySeconds: 0
  selector:
    matchLabels:
      app: admission-control
  template:
    metadata:
      namespace: stackrox
      labels:
        app: admission-control
        app.kubernetes.io/component: admission-control
        app.kubernetes.io/instance: stackrox-secured-cluster-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-secured-cluster-services
        app.kubernetes.io/version: 3.71.0
        helm.sh/chart: sensor-71.0.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-secured-cluster-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      # Attempt to schedule these on master nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # node-role.kubernetes.io/master is replaced by node-role.kubernetes.io/control-plane from certain version
            # of k8s. We apply both to be compatible with any k8s version.
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 60
              podAffinityTerm:
                namespaces: ["stackrox"]
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app: admission-control
      securityContext:
        runAsUser: 4000
        fsGroup: 4000
      serviceAccountName: admission-control
      containers:
        - image: "registry.redhat.io/advanced-cluster-security/rhacs-main-rhel8:3.71.0"
          imagePullPolicy: IfNotPresent
          name: admission-control
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
          ports:
            - containerPort: 8443
              name: webhook
          command:
            - admission-control
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: ROX_SENSOR_ENDPOINT
            value: sensor.stackrox.svc:443
          
          - name: "ROX_COMPLIANCE_OPERATOR_INTEGRATION"
            value: "true"
          
          - name: "ROX_CSV_EXPORT"
            value: "false"
          
          - name: "ROX_DECOMMISSIONED_CLUSTER_RETENTION"
            value: "false"
          
          - name: "ROX_ECR_AUTO_INTEGRATION"
            value: "true"
          
          - name: "ROX_ENABLE_ROLLBACK"
            value: "true"
          
          - name: "ROX_FRONTEND_VM_UDPATES"
            value: "false"
          
          - name: "ROX_INTEGRATIONS_AS_CONFIG"
            value: "false"
          
          - name: "ROX_LOCAL_IMAGE_SCANNING"
            value: "true"
          
          - name: "ROX_NETPOL_FIELDS"
            value: "true"
          
          - name: "ROX_NETWORK_DETECTION_BASELINE_SIMULATION"
            value: "true"
          
          - name: "ROX_NEW_POLICY_CATEGORIES"
            value: "false"
          
          - name: "ROX_POLICIES_PATTERNFLY"
            value: "true"
          
          - name: "ROX_POSTGRES_DATASTORE"
            value: "false"
          
          - name: "ROX_SECURITY_METRICS_PHASE_ONE"
            value: "true"
          
          - name: "ROX_SYSTEM_HEALTH_PF"
            value: "false"
          
          - name: "ROX_VERIFY_IMAGE_SIGNATURE"
            value: "true"
          
          volumeMounts:
            - name: config
              mountPath: /run/config/stackrox.io/admission-control/config/
              readOnly: true
            - name: config-store
              mountPath: /var/lib/stackrox/admission-control/
            - name: ca
              mountPath: /run/secrets/stackrox.io/ca/
              readOnly: true
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: ssl
              mountPath: /etc/ssl
            - name: pki
              mountPath: /etc/pki/ca-trust/
            - name: additional-cas
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            
            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true
            
            
      volumes:
        - name: certs
          secret:
            secretName: admission-control-tls
            optional: true
            items:
              - key: admission-control-cert.pem
                path: cert.pem
              - key: admission-control-key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
        - name: ca
          secret:
            secretName: service-ca
            optional: true
        - name: config
          configMap:
            name: admission-control
            optional: true
        - name: config-store
          emptyDir: {}
        - name: ssl
          emptyDir: {}
        - name: pki
          emptyDir: {}
        - name: additional-cas
          secret:
            secretName: additional-ca-sensor
            optional: true
        
        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-secured-cluster-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
        
        
---

apiVersion: v1
kind: Service
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/component: admission-control
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 3.71.0
    helm.sh/chart: sensor-71.0.0
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  ports:
    - name: https
      port: 443
      targetPort: webhook
      protocol: TCP
  selector:
    app: admission-control
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: stackrox
  labels:
    app.kubernetes.io/component: admission-control
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 3.71.0
    helm.sh/chart: sensor-71.0.0
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
webhooks:
  - name: policyeval.stackrox.io
    sideEffects: NoneOnDryRun
    admissionReviewVersions: [ "v1", "v1beta1" ]
    timeoutSeconds: 5
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - CREATE
        - UPDATE
        resources:
          - pods
          - deployments
          - replicasets
          - replicationcontrollers
          - statefulsets
          - daemonsets
          - cronjobs
          - jobs
          - deploymentconfigs
    namespaceSelector:
      matchExpressions:
      - key: namespace.metadata.stackrox.io/name
        operator: NotIn
        values:
          - stackrox
          - kube-system
          - kube-public
          - istio-system
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIwekNDQVhxZ0F3SUJBZ0lVVFdaRHpHdGVIZnlwdncvL0VUTUxvQTZKTU5rd0NnWUlLb1pJemowRUF3SXcKU0RFbk1DVUdBMVVFQXhNZVUzUmhZMnRTYjNnZ1EyVnlkR2xtYVdOaGRHVWdRWFYwYUc5eWFYUjVNUjB3R3dZRApWUVFGRXhReE56QXpNREEzTXpjMU9ERTRPVEUyTkRZd05EQWVGdzB5TWpBNE1URXdNVEV6TURCYUZ3MHlOekE0Ck1UQXdNVEV6TURCYU1FZ3hKekFsQmdOVkJBTVRIbE4wWVdOclVtOTRJRU5sY25ScFptbGpZWFJsSUVGMWRHaHYKY21sMGVURWRNQnNHQTFVRUJSTVVNVGN3TXpBd056TTNOVGd4T0RreE5qUTJNRFF3V1RBVEJnY3Foa2pPUFFJQgpCZ2dxaGtqT1BRTUJCd05DQUFRNS9SUnpvendTK1JhenpxRDlvVnhVVzcvNzJIS0psQ1ZVK1M3ODdveFBvQmVhClhyV3l2YVp3RnlMdnpDanIrTFRKaEVNRnRTSm1QYlBNT00xS0hnSEFvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVd6c3d6V2lyY0xSclhEa3ZScTNkZjN4dQpLdDh3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnSFh6a2pnYmNjTThhWDR1bGR5RU1qcUp5VFQ1NG9mQXphVE92ClNyLzBhSmdDSUd4cm1hSzdRUTFONVR6M3RISDVVbXNlVmhIYk1tNEhTU3hSMTBmY0FNV3MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        namespace: stackrox
        name: admission-control
        path: /validate
  - name: k8sevents.stackrox.io
    sideEffects: NoneOnDryRun
    admissionReviewVersions: [ "v1", "v1beta1" ]
    timeoutSeconds: 5
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - CONNECT
        resources:
          - pods
          - pods/attach
          - pods/exec
          - pods/portforward
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIwekNDQVhxZ0F3SUJBZ0lVVFdaRHpHdGVIZnlwdncvL0VUTUxvQTZKTU5rd0NnWUlLb1pJemowRUF3SXcKU0RFbk1DVUdBMVVFQXhNZVUzUmhZMnRTYjNnZ1EyVnlkR2xtYVdOaGRHVWdRWFYwYUc5eWFYUjVNUjB3R3dZRApWUVFGRXhReE56QXpNREEzTXpjMU9ERTRPVEUyTkRZd05EQWVGdzB5TWpBNE1URXdNVEV6TURCYUZ3MHlOekE0Ck1UQXdNVEV6TURCYU1FZ3hKekFsQmdOVkJBTVRIbE4wWVdOclVtOTRJRU5sY25ScFptbGpZWFJsSUVGMWRHaHYKY21sMGVURWRNQnNHQTFVRUJSTVVNVGN3TXpBd056TTNOVGd4T0RreE5qUTJNRFF3V1RBVEJnY3Foa2pPUFFJQgpCZ2dxaGtqT1BRTUJCd05DQUFRNS9SUnpvendTK1JhenpxRDlvVnhVVzcvNzJIS0psQ1ZVK1M3ODdveFBvQmVhClhyV3l2YVp3RnlMdnpDanIrTFRKaEVNRnRTSm1QYlBNT00xS0hnSEFvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVd6c3d6V2lyY0xSclhEa3ZScTNkZjN4dQpLdDh3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnSFh6a2pnYmNjTThhWDR1bGR5RU1qcUp5VFQ1NG9mQXphVE92ClNyLzBhSmdDSUd4cm1hSzdRUTFONVR6M3RISDVVbXNlVmhIYk1tNEhTU3hSMTBmY0FNV3MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        namespace: stackrox
        name: admission-control
        path: /events
