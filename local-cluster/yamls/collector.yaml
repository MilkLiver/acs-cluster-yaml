






apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 3.71.0
    helm.sh/chart: sensor-71.0.0
    service: collector
    app: collector
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
  name: collector
  namespace: stackrox
spec:
  selector:
    matchLabels:
      service: collector
  template:
    metadata:
      namespace: stackrox
      labels:
        service: collector
        app: collector
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: stackrox-secured-cluster-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-secured-cluster-services
        app.kubernetes.io/version: 3.71.0
        helm.sh/chart: sensor-71.0.0
      annotations:
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-secured-cluster-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      tolerations:
      - operator: "Exists"
      serviceAccountName: collector
      containers:
      - name: collector
        image: "registry.redhat.io/advanced-cluster-security/rhacs-collector-slim-rhel8:3.71.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: COLLECTOR_CONFIG
          value: '{"tlsConfig":{"caCertPath":"/var/run/secrets/stackrox.io/certs/ca.pem","clientCertPath":"/var/run/secrets/stackrox.io/certs/cert.pem","clientKeyPath":"/var/run/secrets/stackrox.io/certs/key.pem"}}'
        - name: COLLECTION_METHOD
          value: EBPF
        - name: GRPC_SERVER
          value: sensor.stackrox.svc:443
        - name: SNI_HOSTNAME
          value: "sensor.stackrox.svc"
        
        - name: "ROX_COMPLIANCE_OPERATOR_INTEGRATION"
          value: "true"
        
        - name: "ROX_CSV_EXPORT"
          value: "false"
        
        - name: "ROX_DECOMMISSIONED_CLUSTER_RETENTION"
          value: "false"
        
        - name: "ROX_ECR_AUTO_INTEGRATION"
          value: "true"
        
        - name: "ROX_ENABLE_ROLLBACK"
          value: "true"
        
        - name: "ROX_FRONTEND_VM_UDPATES"
          value: "false"
        
        - name: "ROX_INTEGRATIONS_AS_CONFIG"
          value: "false"
        
        - name: "ROX_LOCAL_IMAGE_SCANNING"
          value: "true"
        
        - name: "ROX_NETPOL_FIELDS"
          value: "true"
        
        - name: "ROX_NETWORK_DETECTION_BASELINE_SIMULATION"
          value: "true"
        
        - name: "ROX_NEW_POLICY_CATEGORIES"
          value: "false"
        
        - name: "ROX_POLICIES_PATTERNFLY"
          value: "true"
        
        - name: "ROX_POSTGRES_DATASTORE"
          value: "false"
        
        - name: "ROX_SECURITY_METRICS_PHASE_ONE"
          value: "true"
        
        - name: "ROX_SYSTEM_HEALTH_PF"
          value: "false"
        
        - name: "ROX_VERIFY_IMAGE_SIGNATURE"
          value: "true"
        
        resources:
          limits:
            cpu: 750m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 320Mi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /host/var/run/docker.sock
          name: var-run-docker-sock
          readOnly: true
        - mountPath: /host/proc
          name: proc-ro
          readOnly: true
        - mountPath: /module
          name: tmpfs-module
        - mountPath: /host/etc
          name: etc-ro
          readOnly: true
        - mountPath: /host/usr/lib
          name: usr-lib-ro
          readOnly: true
        - mountPath: /host/sys
          name: sys-ro
          readOnly: true
        - mountPath: /host/dev
          name: dev-ro
          readOnly: true
        - mountPath: /run/secrets/stackrox.io/certs/
          name: certs
          readOnly: true
      - command:
        - stackrox/compliance
        env:
        - name: ROX_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: ROX_ADVERTISED_ENDPOINT
          value: "sensor.stackrox.svc:443"
        
        - name: "ROX_COMPLIANCE_OPERATOR_INTEGRATION"
          value: "true"
        
        - name: "ROX_CSV_EXPORT"
          value: "false"
        
        - name: "ROX_DECOMMISSIONED_CLUSTER_RETENTION"
          value: "false"
        
        - name: "ROX_ECR_AUTO_INTEGRATION"
          value: "true"
        
        - name: "ROX_ENABLE_ROLLBACK"
          value: "true"
        
        - name: "ROX_FRONTEND_VM_UDPATES"
          value: "false"
        
        - name: "ROX_INTEGRATIONS_AS_CONFIG"
          value: "false"
        
        - name: "ROX_LOCAL_IMAGE_SCANNING"
          value: "true"
        
        - name: "ROX_NETPOL_FIELDS"
          value: "true"
        
        - name: "ROX_NETWORK_DETECTION_BASELINE_SIMULATION"
          value: "true"
        
        - name: "ROX_NEW_POLICY_CATEGORIES"
          value: "false"
        
        - name: "ROX_POLICIES_PATTERNFLY"
          value: "true"
        
        - name: "ROX_POSTGRES_DATASTORE"
          value: "false"
        
        - name: "ROX_SECURITY_METRICS_PHASE_ONE"
          value: "true"
        
        - name: "ROX_SYSTEM_HEALTH_PF"
          value: "false"
        
        - name: "ROX_VERIFY_IMAGE_SIGNATURE"
          value: "true"
        
        image: "registry.redhat.io/advanced-cluster-security/rhacs-main-rhel8:3.71.0"
        imagePullPolicy: IfNotPresent
        name: compliance
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
          
          seLinuxOptions:
            type: "container_runtime_t"
          
        volumeMounts:
        - mountPath: /etc/ssl/
          name: etc-ssl
        - mountPath: /etc/pki/ca-trust/
          name: etc-pki-volume
        - mountPath: /host
          name: host-root-ro
          readOnly: true
        - mountPath: /run/secrets/stackrox.io/certs/
          name: certs
          readOnly: true
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: var-run-docker-sock
      - hostPath:
          path: /proc
        name: proc-ro
      - emptyDir:
          medium: Memory
        name: tmpfs-module
      - hostPath:
          path: /etc
        name: etc-ro
      - hostPath:
          path: /usr/lib
        name: usr-lib-ro
      - hostPath:
          path: /sys/
        name: sys-ro
      - hostPath:
          path: /dev
        name: dev-ro
      - name: certs
        secret:
          secretName: collector-tls
          items:
          - key: collector-cert.pem
            path: cert.pem
          - key: collector-key.pem
            path: key.pem
          - key: ca.pem
            path: ca.pem
      - hostPath:
          path: /
        name: host-root-ro
      - name: etc-ssl
        emptyDir: {}
      - name: etc-pki-volume
        emptyDir: {}
